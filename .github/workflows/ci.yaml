name: React.js CI
on: workflow_dispatch
jobs: 
    frontend-test:
        runs-on: ubuntu-latest
        defaults:
            run:
                working-directory: ./quiz-app
        strategy:
            matrix:
                node-version: [20.x]
                arch: [x64]
        steps:
            - name: Checkout the Repo 
              uses: actions/checkout@v4

            - name: USE NODE JS ${{ matrix.node-version }} - ${{ matrix.arch }}
              uses: actions/setup-node@v4
              with: 
                node-version: ${{ matrix.node-version }} 
            
            - name: Calculate cache key
              id: cache-key
              run: |
                  echo CACHE_KEY=deps-node-modules-${{ hashFiles('quiz-app/package-lock.json') }} >> $GITHUB_OUTPUT
            - name: Download cached dependencies              
              id: cache
              uses: actions/cache@v3
              with:
                path: quiz-app/node_modules
                key: ${{ steps.cache-key.outputs.CACHE_KEY }}
            - name: Install Dep
              working-directory: ./quiz-app
              run: |
                npm i
                npm run lint 
                npm install --save-dev --save-exact prettier
                npm run prettier
                npm test
              env:
                CI: true
            - name: build 
              working-directory: ./quiz-app
              run: npm run build
            - name: SonarCloud Scan
              uses: SonarSource/sonarcloud-github-action@master
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
                SONAR_TOKEN: ${{ secrets.SONNAR_TOKEN }}
              with:
                projectBaseDir: quiz-app
                args: >
                  -Dsonar.organization=sami-devsecops-org
                  -Dsonar.projectKey=sami-devsecops-org_quiz-app
    backend-test:
        runs-on: ubuntu-latest
        defaults:
            run:
                working-directory: ./backend
        strategy:
            matrix:
                node-version: [20.x]
                arch: [x64]
        steps:
            - name: Checkout the Repo 
              uses: actions/checkout@v4

            - name: USE NODE JS ${{ matrix.node-version }} - ${{ matrix.arch }}
              uses: actions/setup-node@v4
              with: 
                node-version: ${{ matrix.node-version }} 
            
            - name: Calculate cache key
              id: cache-key
              run: |
                  echo CACHE_KEY=deps-node-modules-${{ hashFiles('backend/package-lock.json') }} >> $GITHUB_OUTPUT
            - name: Download cached dependencies              
              id: cache
              uses: actions/cache@v3
              with:
                path: backend/node_modules
                key: ${{ steps.cache-key.outputs.CACHE_KEY }}
            - name: Install Dep
              working-directory: ./backend
              run: |
                npm i
                npm run lint 
                npm install --save-dev --save-exact prettier
                npm run prettier
                npm test
              env:
                CI: true

            - name: SonarCloud Scan
              uses: SonarSource/sonarcloud-github-action@master
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
                SONAR_TOKEN: ${{ secrets.SONNAR_TOKEN }}
              with:
                projectBaseDir: backend
                args: >
                  -Dsonar.organization=sami-devsecops-org
                  -Dsonar.projectKey=sami-devsecops-org_backend
    frontend-security:
        needs: frontend-test
        runs-on: ubuntu-latest
        defaults:
          run:
            working-directory: ./quiz-app
        steps:
            - name: Checkout the Repo 
              uses: actions/checkout@v4

            - name: Running Snyk using CLI | Install Snyk CLI
              uses: snyk/actions/setup@master
              with:
                snyk-version: latest
              env:
                SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
            - name: Snyk Auth
              run: snyk auth ${{ secrets.SNYK_TOKEN }}
            - name: Snyk Code Test
              run: |
                snyk code test --all-projects
              continue-on-error: true

    backend-security:
        needs: backend-test
        runs-on: ubuntu-latest
        defaults:
          run:
            working-directory: ./backend
        steps:
            - name: Checkout the Repo 
              uses: actions/checkout@v4

            - name: Running Snyk using CLI | Install Snyk CLI
              uses: snyk/actions/setup@master
              with:
                snyk-version: latest
              env:
                SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
            - name: Snyk Auth
              run: snyk auth ${{ secrets.SNYK_TOKEN }}

            - name: Snyk Code Test
              run: |
                snyk code test --all-projects
              continue-on-error: true
    frontend-image:
        needs: frontend-security
        runs-on: ubuntu-latest
        permissions: 
            contents: read # to read the repo 
            security-events: write # to write security reports 
            actions: read # to use actions 
        steps:
          - name: Checkout the Repo 
            uses: actions/checkout@v4

          - name: Build frontend Image and push it t dockerhub
            working-directory: quiz-app
            run: |
              echo ${{ secrets.DOCKER_PASS }} | docker login -u ${{ secrets.DOCKER_USER }} --password-stdin
              docker build . -t ${{ secrets.DOCKER_USER }}/frontend-js:${{ github.sha }}
              docker push ${{ secrets.DOCKER_USER }}/frontend-js:${{ github.sha }}

          - name: Run Trivy Vulnerability scanner 
            uses: aquasecurity/trivy-action@master
            with:
                image-ref: 'docker.io/${{ secrets.DOCKER_USER }}/frontend-js:${{ github.sha }}'
                format: 'sarif'
                output: trivy-result.sarif
                severity: 'CRITICAL,HIGH'

          - name: Running Snyk using CLI | Install Snyk CLI
            uses: snyk/actions/setup@master
            with:
                snyk-version: latest
            env:
              SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

          - name: Snyk Auth
            run: snyk auth ${{ secrets.SNYK_TOKEN }}

          - name: Snyk Container Monitor 
            run: |
              snyk container monitor ${{ secrets.DOCKER_USER }}/frontend-js:${{ github.sha }} --file=Dockerfile
            working-directory: quiz-app

          - name: Run Snyk scan for frontend image
            uses: snyk/actions/docker@master
            with:
              image: ${{ secrets.DOCKER_USER }}/frontend-js:${{ github.sha }}
              args: --file=quiz-app/Dockerfile --severity-threshold=high
            env:
                SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
            continue-on-error: true
    backend-image:
        needs: backend-security
        runs-on: ubuntu-latest
        permissions: 
            contents: read # to read the repo 
            security-events: write # to write security reports 
            actions: read # to use actions 
        steps:
          - name: Checkout the Repo 
            uses: actions/checkout@v4

          - name: Build Backend Image and push it t dockerhub
            working-directory: backend
            run: |
              echo ${{ secrets.DOCKER_PASS }} | docker login -u ${{ secrets.DOCKER_USER }} --password-stdin
              docker build . -t ${{ secrets.DOCKER_USER }}/backend-api:${{ github.sha }}
              docker push ${{ secrets.DOCKER_USER }}/backend-api:${{ github.sha }}

          - name: Run Trivy Vulnerability scanner 
            uses: aquasecurity/trivy-action@master
            with:
                image-ref: 'docker.io/${{ secrets.DOCKER_USER }}/backend-api:${{ github.sha }}'
                format: 'sarif'
                output: trivy-result.sarif
                severity: 'CRITICAL,HIGH'

          - name: Running Snyk using CLI | Install Snyk CLI
            uses: snyk/actions/setup@master
            with:
                snyk-version: latest
            env:
              SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

          - name: Snyk Auth
            run: snyk auth ${{ secrets.SNYK_TOKEN }}

          - name: Snyk Container Monitor 
            run: |
              snyk container monitor ${{ secrets.DOCKER_USER }}/backend-api:${{ github.sha }} --file=Dockerfile
            working-directory: backend

          - name: Run Snyk scan for backend image
            uses: snyk/actions/docker@master
            with:
              image: ${{ secrets.DOCKER_USER }}/backend-api:${{ github.sha }}
              args: --file=backend/Dockerfile --severity-threshold=high
            env:
                SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
            continue-on-error: true
    k8s-scan:
        needs: [backend-image , frontend-image]
        runs-on: ubuntu-latest
        steps:
          - name: Checkout the Repo 
            uses: actions/checkout@v4

          - uses: snyk/actions/iac@master
            with:
                file: kubernetes-manifest/
                args: --severity-threshold=high
            env:
                SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
    update-deployments:
        permissions: 
          id-token: write
          contents: write
        needs: [k8s-scan]
        runs-on: ubuntu-latest
        steps:
        - uses: actions/checkout@v4
        - name: Create local changes
          run: |
            sed -i 's|image:.*|image: ${{ secrets.DOCKER_USER }}/backend-api:${{ github.sha }}|g' ./kubernetes-manifest/backend.yaml
            sed -i 's|image:.*|image: ${{ secrets.DOCKER_USER }}/frontend-js:${{ github.sha }}|g' ./kubernetes-manifest/frontend.yaml
        - name: Commit files
          run: |
            git config --local user.email "github-actions.com"
            git config --local user.name "github-actions"
            git add .
            git commit -m "Edit Deployment files with the new images"
            
        - name: Push changes
          uses: ad-m/github-push-action@master
          with:
            github_token: ${{ secrets.GITHUB_TOKEN }}
            branch: ${{ github.ref }}